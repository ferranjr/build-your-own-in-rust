name: Url Shortener General

on:
  push:
    paths:
      - 'url-shortener/**'
  pull_request:
    paths:
      - 'url-shortener/**'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install the Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: . -> url-shortener

      - name: Run tests
        run: |
          ls -la
          cd url-shortener
          cargo test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: |
          ls -la
          cd url-shortener
          cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: . -> url-shortener
      - name: Linting
        run: |
          ls -la
          cd url-shortener
          cargo clippy -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: ""
      - name: Generate code coverage
        run: |
          ls -la
          cd url-shortener
          cargo install cargo-tarpaulin
          cargo tarpaulin --verbose --workspace